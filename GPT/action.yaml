openapi: 3.1.0
info:
  title: Nuclear Plant State API
  description: |
    Accesses real-time state data for every variable exposed by the Nucleares in-game webserver.
    Use `last_updated` to detect stale information; inspect the `data` payload for the values you need.
  version: 2.0.0
servers:
  - url: https://your-api-url.onrender.com/api
    description: Production server
paths:
  /groups:
    get:
      operationId: listGroups
      summary: List available groups
      description: |
        Returns the group names that can be queried. `schema_groups` are the hand-authored categories from
        `variables.json`, while `inferred_groups` come from the current dataset (prefixes and nested objects).
      responses:
        '200':
          description: Collection of available groups
          content:
            application/json:
              schema:
                type: object
                properties:
                  last_updated:
                    type: string
                    format: date-time
                    description: ISO timestamp of the most recent snapshot (may be null if nothing was uploaded yet)
                  schema_groups:
                    type: array
                    items:
                      type: string
                    description: Groups defined in `variables.json`
                  inferred_groups:
                    type: array
                    items:
                      type: string
                    description: Additional group names discovered from the incoming dataset
                required:
                  - schema_groups
                  - inferred_groups
  /state:
    get:
      operationId: getFullState
      summary: Get full snapshot
      description: |
        Returns the entire state snapshot exactly as last uploaded. Add the query parameter `flat=true`
        to receive a flattened dictionary using dotted keys and `[index]` notation for lists.
      parameters:
        - in: query
          name: flat
          required: false
          schema:
            type: boolean
          description: Whether to flatten the response into a single-level dictionary.
      responses:
        '200':
          $ref: '#/components/responses/StateResponse'
  /state/keys/{key_path}:
    get:
      operationId: getValueByPath
      summary: Drill into nested data
      description: |
        Traverses nested objects or lists using a `/`-delimited path. Path segments are matched case-insensitively.
        List indices must be integers. Example: `/state/keys/VALVULA_ENTRADA_NUCLEO_02/Sector` or
        `/state/keys/WEATHER_FORECAST_JSON/0/Day`.
      parameters:
        - in: path
          name: key_path
          required: true
          schema:
            type: string
          description: Slash-delimited path into the snapshot (encode spaces as `%20`).
      responses:
        '200':
          $ref: '#/components/responses/StateResponse'
  /state/{group}:
    get:
      operationId: getStateGroup
      summary: Get values for a group
      description: |
        Retrieves variables mapped to the requested group. Group names are case-insensitive. Use `all` or `full`
        to get the entire dataset. If the snapshot includes an object whose key matches the group name, that object
        is returned directly.
      parameters:
        - in: path
          name: group
          required: true
          schema:
            type: string
          description: Name of the group to fetch (see `/groups`).
      responses:
        '200':
          $ref: '#/components/responses/StateResponse'
components:
  responses:
    StateResponse:
      description: State payload containing the requested data
      content:
        application/json:
          schema:
            type: object
            properties:
              last_updated:
                type: string
                format: date-time
                nullable: true
                description: Timestamp of the last successful upload
              data:
                description: The requested portion of the plant state snapshot
            required:
              - data
